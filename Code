import cv2
import pandas as pd

#--------------For Motion Detection----------------------#

from datetime import datetime
video=cv2.VideoCapture(0)
first_frame=None
status_list=[0]
times=[]
df=pd.DataFrame(columns=["Start","End"])
while True:
    status=0
    a=status
    check,frame=video.read()
    gray=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
    gray=cv2.GaussianBlur(gray,(21,21),0)
    
    if first_frame is None:
        first_frame=gray
        continue
    
    delta_frame=cv2.absdiff(first_frame,gray)
    thres_frame=cv2.threshold(delta_frame,30,255,cv2.THRESH_BINARY)[1]     #FOR CONTOURS IN IMAGE
    thres_frame=cv2.dilate(thres_frame,None,iterations=2 )
   
    (cnts,_)=cv2.findContours(thres_frame.copy(),cv2.RETR_EXTERNAL,cv2.CHAIN_APPROX_SIMPLE)
    
    for contour in cnts:
        if cv2.contourArea(contour)<10000:
            continue
        status=1
        a=status
        (x,y,w,h)=cv2.boundingRect(contour)
        cv2.rectangle(frame,(x,y),(x+w,y+h),(0,255,0),3)
    
    status_list.append(status)                       #for updating the time when object leaves or enters the frame
    
    status_list=status_list[-2:]        #for saving the memory becuase we only want to check the comdition for last two elements.
    if status_list[-1]==1 and status_list[-2]==0:
        times.append(datetime.now())
    
    if status_list[-1]==0 and status_list[-2]==1:
        times.append(datetime.now())
        
    cv2.imshow("Gray Frame",gray)
    cv2.imshow("Delta Frame",delta_frame)
    cv2.imshow("Threshold Frame",thres_frame)  
    cv2.imshow("Colour Frame",frame)

    key=cv2.waitKey(1)
    #print(gray)
    #print(delta_frame)
    if key==ord('q'):
        if status==1:
            times.append(datetime.now())
        break
print(status_list)
print(times)

for i in range(0,len(times),2):
    df=df.append({"Start":times[i],"End":times[i+1]},ignore_index=True)
df.to_csv("Times.csv")
video.release()
cv2.destroyAllWindows()


#-----------For Graph Drawing--------------#


import bokeh
from bokeh.plotting import figure,show,output_file
from bokeh.models import HoverTool,ColumnDataSource

df["Start_string"]=df["Start"].dt.strftime("%Y-%m-%d %H:%M:%S")
df["End_string"]=df["End"].dt.strftime("%Y-%m-%d %H:%M:%S")

cds=ColumnDataSource(df)

p=figure(x_axis_type='datetime',title="Motion Graph")
#p.ygrid[0].ticker.desired_num_ticks=1
p.yaxis.minor_tick_line_color=None
hover=HoverTool(tooltips=[("Start","@Start_string"),("End","@End_string")])
p.add_tools(hover)
q=p.quad(left="Start",right="End",bottom=0,top=1,color="green",source=cds)
#1...q=p.quad(left=df["Start"],right=df["End"],bottom=0,top=1,color="green")
output_file("Graph1.html",mode='inline')
show(p)
